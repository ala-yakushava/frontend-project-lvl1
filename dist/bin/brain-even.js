#!/usr/bin/env node
"use strict";

var _readlineSync = _interopRequireDefault(require("readline-sync"));

var _ = _interopRequireDefault(require(".."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const min = 1;
const max = 100;
const positiveResponse = 'yes';
const negativeResponse = 'no';
const maxRepeat = 3;
let currentRepeat = 0;
console.log(`Welcome to the Brain Games!\nAnswer "${positiveResponse}" if number even otherwise answer "${negativeResponse}".\n`);
const playerName = (0, _.default)();

const getRandomInt = () => Math.floor(Math.random() * (max - min)) + min;

const getAnswer = randomNumber => {
  const isEven = randomNumber % 2 === 0;
  return isEven ? positiveResponse : negativeResponse;
};

const brainEven = () => {
  const randomNumber = getRandomInt();
  console.log(`Question: ${randomNumber}`);

  const actual = _readlineSync.default.question('Your answer: ');

  const correctAnswer = getAnswer(randomNumber);
  currentRepeat += 1;

  if (actual !== correctAnswer) {
    console.log(`"${actual}" is wrong answer ;(.\nCorrect answer was "${correctAnswer}". Let's try again, ${playerName}!`);
    return null;
  }

  console.log('Correct!');

  if (currentRepeat === maxRepeat) {
    console.log(`Congratulations, ${playerName}!`);
    return null;
  }

  return brainEven();
};

brainEven();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9iaW4vYnJhaW4tZXZlbi5qcyJdLCJuYW1lcyI6WyJtaW4iLCJtYXgiLCJwb3NpdGl2ZVJlc3BvbnNlIiwibmVnYXRpdmVSZXNwb25zZSIsIm1heFJlcGVhdCIsImN1cnJlbnRSZXBlYXQiLCJjb25zb2xlIiwibG9nIiwicGxheWVyTmFtZSIsImdldFJhbmRvbUludCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImdldEFuc3dlciIsInJhbmRvbU51bWJlciIsImlzRXZlbiIsImJyYWluRXZlbiIsImFjdHVhbCIsInJlYWRsaW5lU3luYyIsInF1ZXN0aW9uIiwiY29ycmVjdEFuc3dlciJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsR0FBRyxHQUFHLENBQVo7QUFDQSxNQUFNQyxHQUFHLEdBQUcsR0FBWjtBQUNBLE1BQU1DLGdCQUFnQixHQUFHLEtBQXpCO0FBQ0EsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBekI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsQ0FBbEI7QUFDQSxJQUFJQyxhQUFhLEdBQUcsQ0FBcEI7QUFFQUMsT0FBTyxDQUFDQyxHQUFSLENBQWEsd0NBQXVDTCxnQkFBaUIsc0NBQXFDQyxnQkFBaUIsTUFBM0g7QUFFQSxNQUFNSyxVQUFVLEdBQUcsZ0JBQW5COztBQUVBLE1BQU1DLFlBQVksR0FBRyxNQUFNQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLE1BQWlCWCxHQUFHLEdBQUdELEdBQXZCLENBQVgsSUFBMENBLEdBQXJFOztBQUVBLE1BQU1hLFNBQVMsR0FBSUMsWUFBRCxJQUFrQjtBQUNsQyxRQUFNQyxNQUFNLEdBQUdELFlBQVksR0FBRyxDQUFmLEtBQXFCLENBQXBDO0FBQ0EsU0FBT0MsTUFBTSxHQUFHYixnQkFBSCxHQUFzQkMsZ0JBQW5DO0FBQ0QsQ0FIRDs7QUFLQSxNQUFNYSxTQUFTLEdBQUcsTUFBTTtBQUN0QixRQUFNRixZQUFZLEdBQUdMLFlBQVksRUFBakM7QUFDQUgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsYUFBWU8sWUFBYSxFQUF0Qzs7QUFDQSxRQUFNRyxNQUFNLEdBQUdDLHNCQUFhQyxRQUFiLENBQXNCLGVBQXRCLENBQWY7O0FBQ0EsUUFBTUMsYUFBYSxHQUFHUCxTQUFTLENBQUNDLFlBQUQsQ0FBL0I7QUFDQVQsRUFBQUEsYUFBYSxJQUFJLENBQWpCOztBQUVBLE1BQUlZLE1BQU0sS0FBS0csYUFBZixFQUE4QjtBQUM1QmQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsSUFBR1UsTUFBTyw4Q0FBNkNHLGFBQWMsdUJBQXNCWixVQUFXLEdBQW5IO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBRURGLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVo7O0FBRUEsTUFBSUYsYUFBYSxLQUFLRCxTQUF0QixFQUFpQztBQUMvQkUsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsb0JBQW1CQyxVQUFXLEdBQTNDO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBT1EsU0FBUyxFQUFoQjtBQUNELENBcEJEOztBQXNCQUEsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCByZWFkbGluZVN5bmMgZnJvbSAncmVhZGxpbmUtc3luYyc7XG5pbXBvcnQgZ3JlZXQgZnJvbSAnLi4nO1xuXG5jb25zdCBtaW4gPSAxO1xuY29uc3QgbWF4ID0gMTAwO1xuY29uc3QgcG9zaXRpdmVSZXNwb25zZSA9ICd5ZXMnO1xuY29uc3QgbmVnYXRpdmVSZXNwb25zZSA9ICdubyc7XG5jb25zdCBtYXhSZXBlYXQgPSAzO1xubGV0IGN1cnJlbnRSZXBlYXQgPSAwO1xuXG5jb25zb2xlLmxvZyhgV2VsY29tZSB0byB0aGUgQnJhaW4gR2FtZXMhXFxuQW5zd2VyIFwiJHtwb3NpdGl2ZVJlc3BvbnNlfVwiIGlmIG51bWJlciBldmVuIG90aGVyd2lzZSBhbnN3ZXIgXCIke25lZ2F0aXZlUmVzcG9uc2V9XCIuXFxuYCk7XG5cbmNvbnN0IHBsYXllck5hbWUgPSBncmVldCgpO1xuXG5jb25zdCBnZXRSYW5kb21JbnQgPSAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XG5cbmNvbnN0IGdldEFuc3dlciA9IChyYW5kb21OdW1iZXIpID0+IHtcbiAgY29uc3QgaXNFdmVuID0gcmFuZG9tTnVtYmVyICUgMiA9PT0gMDtcbiAgcmV0dXJuIGlzRXZlbiA/IHBvc2l0aXZlUmVzcG9uc2UgOiBuZWdhdGl2ZVJlc3BvbnNlO1xufTtcblxuY29uc3QgYnJhaW5FdmVuID0gKCkgPT4ge1xuICBjb25zdCByYW5kb21OdW1iZXIgPSBnZXRSYW5kb21JbnQoKTtcbiAgY29uc29sZS5sb2coYFF1ZXN0aW9uOiAke3JhbmRvbU51bWJlcn1gKTtcbiAgY29uc3QgYWN0dWFsID0gcmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdZb3VyIGFuc3dlcjogJyk7XG4gIGNvbnN0IGNvcnJlY3RBbnN3ZXIgPSBnZXRBbnN3ZXIocmFuZG9tTnVtYmVyKTtcbiAgY3VycmVudFJlcGVhdCArPSAxO1xuXG4gIGlmIChhY3R1YWwgIT09IGNvcnJlY3RBbnN3ZXIpIHtcbiAgICBjb25zb2xlLmxvZyhgXCIke2FjdHVhbH1cIiBpcyB3cm9uZyBhbnN3ZXIgOyguXFxuQ29ycmVjdCBhbnN3ZXIgd2FzIFwiJHtjb3JyZWN0QW5zd2VyfVwiLiBMZXQncyB0cnkgYWdhaW4sICR7cGxheWVyTmFtZX0hYCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zb2xlLmxvZygnQ29ycmVjdCEnKTtcblxuICBpZiAoY3VycmVudFJlcGVhdCA9PT0gbWF4UmVwZWF0KSB7XG4gICAgY29uc29sZS5sb2coYENvbmdyYXR1bGF0aW9ucywgJHtwbGF5ZXJOYW1lfSFgKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBicmFpbkV2ZW4oKTtcbn07XG5cbmJyYWluRXZlbigpO1xuIl19